name: Publish a snapshot release

on:
  push:
    branches:
      - master

jobs:
  publish_snapshot:
    strategy:
      matrix:
        os: [macOS-latest, windows-latest]

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v3

      - uses: gradle/wrapper-validation-action@v1.0.4

      - name: Cache gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/setup-java@v3.2.0
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Publish the artifacts
        if: matrix.os == 'macOS-latest'
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.ARTIFACT_SIGNING_PRIVATE_KEY }}
        run: ./release

      - name: Publish the Windows artifacts
        if: matrix.os == 'windows-latest'
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.ARTIFACT_SIGNING_PRIVATE_KEY }}
        run: ./release_windows.bat

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.configureondemand=false -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx4g -Xms128m -XX:MaxPermSize=4096m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -XX:MaxMetaspaceSize=1024m"
